#! /bin/sh
### BEGIN INIT INFO
# Provides:          ewsd
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Ella Web Server
# Description:       Ella Web Server daemon to init server, please
#                    placed in /etc/init.d.
### END INIT INFO

# Author: Manuel Rubio <bombadil@bosqueviejo.net>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Ella Web Server"
NAME=ewsd
DAEMON=/usr/sbin/$NAME
DAEMON_ARGS=""
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    if [ -f "$PIDFILE" ]; then
        if [ ! -z "$(ps h $(cat $PIDFILE))" ]; then
            echo
            echo "$NAME is running!"
            return 2
        else
            rm -f $PIDFILE
        fi
    fi
    $DAEMON &
    PID=$!
    echo $PID > $PIDFILE
    return 0
}

#
# Function that stops the daemon/service
#
do_stop()
{
    if [ -f "$PIDFILE" ]; then
        if [ ! -z "$( ps h $(cat $PIDFILE))" ]; then
            PID=$(cat $PIDFILE)
            kill $PID
        fi
        rm -f $PIDFILE
    else
        echo
        echo "$NAME isn't running!"
        return 2
    fi
    return 0
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
    do_stop
    do_start
}

case "$1" in
start)
    log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
        0|1) log_end_msg 0 ;;
        2) log_end_msg 1 ;;
    esac
    ;;
stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
        0|1) log_end_msg 0 ;;
        2) log_end_msg 1 ;;
    esac
    ;;
restart|force-reload)
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_stop
    case "$?" in
    0|1)
        do_start
        case "$?" in
            0) log_end_msg 0 ;;
            1) log_end_msg 1 ;; # Old process is still running
            *) log_end_msg 1 ;; # Failed to start
        esac
        ;;
    *)
        # Failed to stop
        log_end_msg 1
        ;;
    esac
    ;;
*)
    echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
    exit 3
    ;;
esac
